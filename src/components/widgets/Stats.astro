---
import type { Stats as Props } from '~/types';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import { Icon } from 'astro-icon/components';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  stats = [],

  id,
  isDark = true,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`}
  bg={bg ?? 'bg-black'}
>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="flex flex-wrap justify-center -m-4 text-center">
    {
      stats &&
        stats.map(({ amount, title, icon }) => (
          <div class="p-6 md:w-1/4 sm:w-1/2 w-full min-w-[220px] text-center border-primary/40 md:border-r last:border-none intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade intersect-quarter">
            {icon && (
              // CAMBIO: Se usa text-primary para el color del ícono
              <div class="flex items-center justify-center mx-auto mb-4 text-primary">
                <Icon name={icon} class="w-10 h-10" />
              </div>
            )}
            {amount && (
              // CAMBIO: Se usa text-primary y clases estándar de Tailwind para el número
              <div class="text-5xl font-bold text-primary font-heading">{amount}</div>
            )}
            {title && (
              // CAMBIO: Se usa text-default para el título descriptivo
              <div class="text-default uppercase tracking-wider mt-1">{title}</div>
            )}
          </div>
        ))
    }
  </div>
</WidgetWrapper>
