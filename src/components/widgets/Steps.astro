---
import { Icon } from 'astro-icon/components';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import type { Steps as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  callToAction = await Astro.slots.render('callToAction'),
  items = [],

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <div class="flex flex-col gap-8 md:gap-12">
    <div class="w-full text-center">
      <Headline title={title} subtitle={subtitle} tagline={tagline} />

      {
        typeof callToAction === 'object' && callToAction?.text && callToAction?.href && (
          <Button variant="primary" {...callToAction} class="mb-12 w-auto" />
        )
      }
    </div>

    <div class="w-full">
      <ul class="grid grid-cols-1 md:grid-cols-2 gap-10 text-center">
        {
          items && items.length
            ? items.map(({ title: title2, description, icon }, index) => (
                <li class="flex flex-col items-center">
                  <span class="flex w-16 h-16 mb-4 items-center justify-center text-2xl font-bold rounded-full bg-black/20 text-primary border border-primary/50">
                    {icon ? <Icon name={icon} class="w-6 h-6 icon-bold" /> : index + 1}
                  </span>

                  <h3 class="mb-4 text-xl font-semibold font-heading" set:html={title2} />

                  <p class="text-default" set:html={description} />
                </li>
              ))
            : ''
        }
      </ul>
    </div>
  </div>
</WidgetWrapper>
